
# 1 "SN74HC164.c"

# 16 "SN74HC164.h"
typedef struct SN74HC164{
unsigned char *clkPort;
unsigned char clkMask;
unsigned char *dPort;
unsigned char dMask;
unsigned char data;
} SN74HC164;

void init(SN74HC164 *object,
unsigned char *clockPort,
unsigned char clockMask,
unsigned char *dataPort,
unsigned char dataMask);
void loadNew(SN74HC164 *object, unsigned char newData);
void resend(SN74HC164 *object);
void clear(SN74HC164 *object);

# 4 "SN74HC164.c"
void init(SN74HC164 *object,
unsigned char *clockPort,
unsigned char clockMask,
unsigned char *dataPort,
unsigned char dataMask)
{
object->clkPort = clockPort;
object->clkMask = clockMask;
object->dPort = dataPort;
object->dMask = dataMask;


object->data = 0xaa;


object->clkPort[0] |= object->clkMask;

clear(object);

}

void loadNew(SN74HC164 * object, unsigned char newData)
{
object->data = newData;
resend(object);
}
void resend(SN74HC164 *object)
{
int cycle;
for(cycle=0; cycle < 8; cycle++){

unsigned char toSend;
toSend= 0x00;
if((0x80 >> cycle) & object->data){
toSend = 0xff;
}else{
toSend = 0x00;
}
object->dPort[0] |= (object->dMask & toSend);
asm("nop");

object->clkPort[0] |= (object->clkMask & 0xff);
asm("nop");

object->clkPort[0] &= ~(object->clkMask & 0xff);
}
}

void clear(SN74HC164 *object){
object->data = 0x00;


}
