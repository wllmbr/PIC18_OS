

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 15 14:06:20 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.42
    21                           ; Generated 13/04/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F47K40 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  01FC97                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _regNumber
    60  01FC97  00                 	db	0
    61  01FC98  03                 	db	3
    62  01FC99  00                 	db	0
    63  01FC9A  01                 	db	1
    64  01FC9B  02                 	db	2
    65  01FC9C  03                 	db	3
    66  01FC9D  04                 	db	4
    67  01FC9E  05                 	db	5
    68  01FC9F  00                 	db	0
    69  01FCA0  01                 	db	1
    70  01FCA1  02                 	db	2
    71  01FCA2  00                 	db	0
    72  01FCA3  00                 	db	0
    73  01FCA4  07                 	db	7
    74  01FCA5  06                 	db	6
    75  01FCA6  00                 	db	0
    76  01FCA7  01                 	db	1
    77  01FCA8  02                 	db	2
    78  01FCA9  03                 	db	3
    79  01FCAA  00                 	db	0
    80  01FCAB  01                 	db	1
    81  01FCAC  02                 	db	2
    82  01FCAD  03                 	db	3
    83  01FCAE  04                 	db	4
    84  01FCAF  05                 	db	5
    85  01FCB0  06                 	db	6
    86  01FCB1  07                 	db	7
    87  01FCB2  04                 	db	4
    88  01FCB3  05                 	db	5
    89  01FCB4  06                 	db	6
    90  01FCB5  07                 	db	7
    91  01FCB6  00                 	db	0
    92  01FCB7  00                 	db	0
    93  01FCB8  00                 	db	0
    94  01FCB9  01                 	db	1
    95  01FCBA  02                 	db	2
    96  01FCBB  03                 	db	3
    97  01FCBC  04                 	db	4
    98  01FCBD  05                 	db	5
    99  01FCBE  06                 	db	6
   100  01FCBF  07                 	db	7
   101                           
   102                           	psect	idataBANK0
   103  01FD82                     __pidataBANK0:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _trisID
   107  01FD82  00                 	db	0
   108  01FD83  00                 	db	0
   109  01FD84  8C                 	db	140
   110  01FD85  0F                 	db	15
   111  01FD86  88                 	db	136
   112  01FD87  0F                 	db	15
   113  01FD88  88                 	db	136
   114  01FD89  0F                 	db	15
   115  01FD8A  88                 	db	136
   116  01FD8B  0F                 	db	15
   117  01FD8C  88                 	db	136
   118  01FD8D  0F                 	db	15
   119  01FD8E  88                 	db	136
   120  01FD8F  0F                 	db	15
   121  01FD90  88                 	db	136
   122  01FD91  0F                 	db	15
   123  01FD92  8C                 	db	140
   124  01FD93  0F                 	db	15
   125  01FD94  8C                 	db	140
   126  01FD95  0F                 	db	15
   127  01FD96  8C                 	db	140
   128  01FD97  0F                 	db	15
   129  01FD98  00                 	db	0
   130  01FD99  00                 	db	0
   131  01FD9A  00                 	db	0
   132  01FD9B  00                 	db	0
   133  01FD9C  88                 	db	136
   134  01FD9D  0F                 	db	15
   135  01FD9E  88                 	db	136
   136  01FD9F  0F                 	db	15
   137  01FDA0  8A                 	db	138
   138  01FDA1  0F                 	db	15
   139  01FDA2  8A                 	db	138
   140  01FDA3  0F                 	db	15
   141  01FDA4  8A                 	db	138
   142  01FDA5  0F                 	db	15
   143  01FDA6  8A                 	db	138
   144  01FDA7  0F                 	db	15
   145  01FDA8  8B                 	db	139
   146  01FDA9  0F                 	db	15
   147  01FDAA  8B                 	db	139
   148  01FDAB  0F                 	db	15
   149  01FDAC  8B                 	db	139
   150  01FDAD  0F                 	db	15
   151  01FDAE  8B                 	db	139
   152  01FDAF  0F                 	db	15
   153  01FDB0  8A                 	db	138
   154  01FDB1  0F                 	db	15
   155  01FDB2  8A                 	db	138
   156  01FDB3  0F                 	db	15
   157  01FDB4  8A                 	db	138
   158  01FDB5  0F                 	db	15
   159  01FDB6  8A                 	db	138
   160  01FDB7  0F                 	db	15
   161  01FDB8  8B                 	db	139
   162  01FDB9  0F                 	db	15
   163  01FDBA  8B                 	db	139
   164  01FDBB  0F                 	db	15
   165  01FDBC  8B                 	db	139
   166  01FDBD  0F                 	db	15
   167  01FDBE  8B                 	db	139
   168  01FDBF  0F                 	db	15
   169  01FDC0  00                 	db	0
   170  01FDC1  00                 	db	0
   171  01FDC2  00                 	db	0
   172  01FDC3  00                 	db	0
   173  01FDC4  89                 	db	137
   174  01FDC5  0F                 	db	15
   175  01FDC6  89                 	db	137
   176  01FDC7  0F                 	db	15
   177  01FDC8  89                 	db	137
   178  01FDC9  0F                 	db	15
   179  01FDCA  89                 	db	137
   180  01FDCB  0F                 	db	15
   181  01FDCC  89                 	db	137
   182  01FDCD  0F                 	db	15
   183  01FDCE  89                 	db	137
   184  01FDCF  0F                 	db	15
   185  01FDD0  89                 	db	137
   186  01FDD1  0F                 	db	15
   187  01FDD2  89                 	db	137
   188  01FDD3  0F                 	db	15
   189                           
   190                           	psect	idataBANK1
   191  01FE3A                     __pidataBANK1:
   192                           	opt stack 0
   193                           
   194                           ;initializer for _latID
   195  01FE3A  00                 	db	0
   196  01FE3B  00                 	db	0
   197  01FE3C  87                 	db	135
   198  01FE3D  0F                 	db	15
   199  01FE3E  83                 	db	131
   200  01FE3F  0F                 	db	15
   201  01FE40  83                 	db	131
   202  01FE41  0F                 	db	15
   203  01FE42  83                 	db	131
   204  01FE43  0F                 	db	15
   205  01FE44  83                 	db	131
   206  01FE45  0F                 	db	15
   207  01FE46  83                 	db	131
   208  01FE47  0F                 	db	15
   209  01FE48  83                 	db	131
   210  01FE49  0F                 	db	15
   211  01FE4A  87                 	db	135
   212  01FE4B  0F                 	db	15
   213  01FE4C  87                 	db	135
   214  01FE4D  0F                 	db	15
   215  01FE4E  87                 	db	135
   216  01FE4F  0F                 	db	15
   217  01FE50  00                 	db	0
   218  01FE51  00                 	db	0
   219  01FE52  00                 	db	0
   220  01FE53  00                 	db	0
   221  01FE54  83                 	db	131
   222  01FE55  0F                 	db	15
   223  01FE56  83                 	db	131
   224  01FE57  0F                 	db	15
   225  01FE58  85                 	db	133
   226  01FE59  0F                 	db	15
   227  01FE5A  85                 	db	133
   228  01FE5B  0F                 	db	15
   229  01FE5C  85                 	db	133
   230  01FE5D  0F                 	db	15
   231  01FE5E  85                 	db	133
   232  01FE5F  0F                 	db	15
   233  01FE60  86                 	db	134
   234  01FE61  0F                 	db	15
   235  01FE62  86                 	db	134
   236  01FE63  0F                 	db	15
   237  01FE64  86                 	db	134
   238  01FE65  0F                 	db	15
   239  01FE66  86                 	db	134
   240  01FE67  0F                 	db	15
   241  01FE68  85                 	db	133
   242  01FE69  0F                 	db	15
   243  01FE6A  85                 	db	133
   244  01FE6B  0F                 	db	15
   245  01FE6C  85                 	db	133
   246  01FE6D  0F                 	db	15
   247  01FE6E  85                 	db	133
   248  01FE6F  0F                 	db	15
   249  01FE70  86                 	db	134
   250  01FE71  0F                 	db	15
   251  01FE72  86                 	db	134
   252  01FE73  0F                 	db	15
   253  01FE74  86                 	db	134
   254  01FE75  0F                 	db	15
   255  01FE76  86                 	db	134
   256  01FE77  0F                 	db	15
   257  01FE78  00                 	db	0
   258  01FE79  00                 	db	0
   259  01FE7A  00                 	db	0
   260  01FE7B  00                 	db	0
   261  01FE7C  84                 	db	132
   262  01FE7D  0F                 	db	15
   263  01FE7E  84                 	db	132
   264  01FE7F  0F                 	db	15
   265  01FE80  84                 	db	132
   266  01FE81  0F                 	db	15
   267  01FE82  84                 	db	132
   268  01FE83  0F                 	db	15
   269  01FE84  84                 	db	132
   270  01FE85  0F                 	db	15
   271  01FE86  84                 	db	132
   272  01FE87  0F                 	db	15
   273  01FE88  84                 	db	132
   274  01FE89  0F                 	db	15
   275  01FE8A  84                 	db	132
   276  01FE8B  0F                 	db	15
   277                           
   278                           ;initializer for _portID
   279  01FE8C  00                 	db	0
   280  01FE8D  00                 	db	0
   281  01FE8E  91                 	db	145
   282  01FE8F  0F                 	db	15
   283  01FE90  8D                 	db	141
   284  01FE91  0F                 	db	15
   285  01FE92  8D                 	db	141
   286  01FE93  0F                 	db	15
   287  01FE94  8D                 	db	141
   288  01FE95  0F                 	db	15
   289  01FE96  8D                 	db	141
   290  01FE97  0F                 	db	15
   291  01FE98  8D                 	db	141
   292  01FE99  0F                 	db	15
   293  01FE9A  8D                 	db	141
   294  01FE9B  0F                 	db	15
   295  01FE9C  91                 	db	145
   296  01FE9D  0F                 	db	15
   297  01FE9E  91                 	db	145
   298  01FE9F  0F                 	db	15
   299  01FEA0  91                 	db	145
   300  01FEA1  0F                 	db	15
   301  01FEA2  00                 	db	0
   302  01FEA3  00                 	db	0
   303  01FEA4  00                 	db	0
   304  01FEA5  00                 	db	0
   305  01FEA6  8D                 	db	141
   306  01FEA7  0F                 	db	15
   307  01FEA8  8D                 	db	141
   308  01FEA9  0F                 	db	15
   309  01FEAA  8F                 	db	143
   310  01FEAB  0F                 	db	15
   311  01FEAC  8F                 	db	143
   312  01FEAD  0F                 	db	15
   313  01FEAE  8F                 	db	143
   314  01FEAF  0F                 	db	15
   315  01FEB0  8F                 	db	143
   316  01FEB1  0F                 	db	15
   317  01FEB2  90                 	db	144
   318  01FEB3  0F                 	db	15
   319  01FEB4  90                 	db	144
   320  01FEB5  0F                 	db	15
   321  01FEB6  90                 	db	144
   322  01FEB7  0F                 	db	15
   323  01FEB8  90                 	db	144
   324  01FEB9  0F                 	db	15
   325  01FEBA  8F                 	db	143
   326  01FEBB  0F                 	db	15
   327  01FEBC  8F                 	db	143
   328  01FEBD  0F                 	db	15
   329  01FEBE  8F                 	db	143
   330  01FEBF  0F                 	db	15
   331  01FEC0  8F                 	db	143
   332  01FEC1  0F                 	db	15
   333  01FEC2  90                 	db	144
   334  01FEC3  0F                 	db	15
   335  01FEC4  90                 	db	144
   336  01FEC5  0F                 	db	15
   337  01FEC6  90                 	db	144
   338  01FEC7  0F                 	db	15
   339  01FEC8  90                 	db	144
   340  01FEC9  0F                 	db	15
   341  01FECA  00                 	db	0
   342  01FECB  00                 	db	0
   343  01FECC  00                 	db	0
   344  01FECD  00                 	db	0
   345  01FECE  8E                 	db	142
   346  01FECF  0F                 	db	15
   347  01FED0  8E                 	db	142
   348  01FED1  0F                 	db	15
   349  01FED2  8E                 	db	142
   350  01FED3  0F                 	db	15
   351  01FED4  8E                 	db	142
   352  01FED5  0F                 	db	15
   353  01FED6  8E                 	db	142
   354  01FED7  0F                 	db	15
   355  01FED8  8E                 	db	142
   356  01FED9  0F                 	db	15
   357  01FEDA  8E                 	db	142
   358  01FEDB  0F                 	db	15
   359  01FEDC  8E                 	db	142
   360  01FEDD  0F                 	db	15
   361  0000                     _LATB	set	3972
   362  0000                     _LATD	set	3974
   363  0000                     _LATC	set	3973
   364  0000                     _LATA	set	3971
   365  0000                     _LATE	set	3975
   366  0000                     _PORTB	set	3982
   367  0000                     _PORTD	set	3984
   368  0000                     _PORTC	set	3983
   369  0000                     _PORTA	set	3981
   370  0000                     _PORTE	set	3985
   371  0000                     _TRISB	set	3977
   372  0000                     _TRISD	set	3979
   373  0000                     _TRISC	set	3978
   374  0000                     _TRISA	set	3976
   375  0000                     _TRISE	set	3980
   376                           
   377                           ; #config settings
   378  0000                     
   379                           	psect	cinit
   380  01FDD4                     __pcinit:
   381                           	opt stack 0
   382  01FDD4                     start_initialization:
   383                           	opt stack 0
   384  01FDD4                     __initialization:
   385                           	opt stack 0
   386                           
   387                           ; Initialize objects allocated to BANK1 (164 bytes)
   388                           ; load TBLPTR registers with __pidataBANK1
   389  01FDD4  0E3A               	movlw	low __pidataBANK1
   390  01FDD6  6EF6               	movwf	tblptrl,c
   391  01FDD8  0EFE               	movlw	high __pidataBANK1
   392  01FDDA  6EF7               	movwf	tblptrh,c
   393  01FDDC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   394  01FDDE  6EF8               	movwf	tblptru,c
   395  01FDE0  EE01  F000         	lfsr	0,__pdataBANK1
   396  01FDE4  EE10 F0A4          	lfsr	1,164
   397  01FDE8                     copy_data0:
   398  01FDE8  0009               	tblrd		*+
   399  01FDEA  CFF5 FFEE          	movff	tablat,postinc0
   400  01FDEE  50E5               	movf	postdec1,w,c
   401  01FDF0  50E1               	movf	fsr1l,w,c
   402  01FDF2  E1FA               	bnz	copy_data0
   403                           
   404                           ; Initialize objects allocated to BANK0 (82 bytes)
   405                           ; load TBLPTR registers with __pidataBANK0
   406  01FDF4  0E82               	movlw	low __pidataBANK0
   407  01FDF6  6EF6               	movwf	tblptrl,c
   408  01FDF8  0EFD               	movlw	high __pidataBANK0
   409  01FDFA  6EF7               	movwf	tblptrh,c
   410  01FDFC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   411  01FDFE  6EF8               	movwf	tblptru,c
   412  01FE00  EE00  F060         	lfsr	0,__pdataBANK0
   413  01FE04  EE10 F052          	lfsr	1,82
   414  01FE08                     copy_data1:
   415  01FE08  0009               	tblrd		*+
   416  01FE0A  CFF5 FFEE          	movff	tablat,postinc0
   417  01FE0E  50E5               	movf	postdec1,w,c
   418  01FE10  50E1               	movf	fsr1l,w,c
   419  01FE12  E1FA               	bnz	copy_data1
   420                           
   421                           ; Initialize objects allocated to COMRAM (41 bytes)
   422                           ; load TBLPTR registers with __pidataCOMRAM
   423  01FE14  0E97               	movlw	low __pidataCOMRAM
   424  01FE16  6EF6               	movwf	tblptrl,c
   425  01FE18  0EFC               	movlw	high __pidataCOMRAM
   426  01FE1A  6EF7               	movwf	tblptrh,c
   427  01FE1C  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   428  01FE1E  6EF8               	movwf	tblptru,c
   429  01FE20  EE00  F001         	lfsr	0,__pdataCOMRAM
   430  01FE24  EE10 F029          	lfsr	1,41
   431  01FE28                     copy_data2:
   432  01FE28  0009               	tblrd		*+
   433  01FE2A  CFF5 FFEE          	movff	tablat,postinc0
   434  01FE2E  50E5               	movf	postdec1,w,c
   435  01FE30  50E1               	movf	fsr1l,w,c
   436  01FE32  E1FA               	bnz	copy_data2
   437  01FE34                     end_of_initialization:
   438                           	opt stack 0
   439  01FE34                     __end_of__initialization:
   440                           	opt stack 0
   441  01FE34  0100               	movlb	0
   442  01FE36  EF78  F0FE         	goto	_main	;jump to C main() function
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	dataCOMRAM
   452  000001                     __pdataCOMRAM:
   453                           	opt stack 0
   454  000001                     _regNumber:
   455                           	opt stack 0
   456  000001                     	ds	41
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	dataBANK0
   466  000060                     __pdataBANK0:
   467                           	opt stack 0
   468  000060                     _trisID:
   469                           	opt stack 0
   470  000060                     	ds	82
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	dataBANK1
   480  000100                     __pdataBANK1:
   481                           	opt stack 0
   482  000100                     _latID:
   483                           	opt stack 0
   484  000100                     	ds	82
   485  000152                     _portID:
   486                           	opt stack 0
   487  000152                     	ds	82
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496                           	psect	cstackCOMRAM
   497  00002A                     __pcstackCOMRAM:
   498                           	opt stack 0
   499  00002A                     driveLow@pin:
   500                           	opt stack 0
   501  00002A                     toggle@pin:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x0
   505  00002A                     	ds	2
   506  00002C                     ??_toggle:
   507  00002C                     ??_driveLow:
   508                           
   509                           ; 1 bytes @ 0x2
   510  00002C                     	ds	2
   511  00002E                     driveLow@toMask:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x4
   515  00002E                     	ds	1
   516  00002F                     toggle@toAssign:
   517                           	opt stack 0
   518  00002F                     startPin@newPin:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x5
   522  00002F                     	ds	2
   523  000031                     startPin@pinNum:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x7
   527  000031                     	ds	1
   528  000032                     startPin@pinDir:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x8
   532  000032                     	ds	2
   533  000034                     ??_startPin:
   534                           
   535                           ; 1 bytes @ 0xA
   536  000034                     	ds	3
   537  000037                     startPin@shiftLevel:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xD
   541  000037                     	ds	2
   542  000039                     startPin@rm:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0xF
   546  000039                     	ds	1
   547  00003A                     main@overFlow:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x10
   551  00003A                     	ds	2
   552  00003C                     main@c:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x12
   556  00003C                     	ds	2
   557  00003E                     main@ledPin:
   558                           	opt stack 0
   559                           
   560                           ; 7 bytes @ 0x14
   561  00003E                     	ds	7
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 14 in file "newmain.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  ledPin          7   20[COMRAM] struct pinDef
   580 ;;  c               2   18[COMRAM] unsigned int 
   581 ;;  overFlow        2   16[COMRAM] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;Total ram usage:       11 bytes
   596 ;; Hardware stack levels required when called:    2
   597 ;; This function calls:
   598 ;;		_startPin
   599 ;;		_toggle
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  01FCF0                     __ptext0:
   607                           	opt stack 0
   608  01FCF0                     _main:
   609                           	opt stack 29
   610                           
   611                           ;newmain.c: 27: struct pinDef ledPin;
   612                           ;newmain.c: 28: startPin(&ledPin,21,1);
   613                           
   614                           ;incstack = 0
   615  01FCF0  0E3E               	movlw	low main@ledPin
   616  01FCF2  6E2F               	movwf	startPin@newPin,c
   617  01FCF4  0E00               	movlw	high main@ledPin
   618  01FCF6  6E30               	movwf	startPin@newPin+1,c
   619  01FCF8  0E15               	movlw	21
   620  01FCFA  6E31               	movwf	startPin@pinNum,c
   621  01FCFC  0E00               	movlw	0
   622  01FCFE  6E33               	movwf	startPin@pinDir+1,c
   623  01FD00  0E01               	movlw	1
   624  01FD02  6E32               	movwf	startPin@pinDir,c
   625  01FD04  EC6F  F0FF         	call	_startPin	;wreg free
   626                           
   627                           ;newmain.c: 29: unsigned int c;
   628                           ;newmain.c: 30: unsigned int overFlow = 65535;
   629  01FD08  683A               	setf	main@overFlow,c
   630  01FD0A  683B               	setf	main@overFlow+1,c
   631  01FD0C                     l827:
   632                           
   633                           ;newmain.c: 32: {
   634                           ;newmain.c: 37: toggle(&ledPin);
   635  01FD0C  0E3E               	movlw	low main@ledPin
   636  01FD0E  6E2A               	movwf	toggle@pin,c
   637  01FD10  0E00               	movlw	high main@ledPin
   638  01FD12  6E2B               	movwf	toggle@pin+1,c
   639  01FD14  EC9B  F0FE         	call	_toggle	;wreg free
   640                           
   641                           ;newmain.c: 38: for(c = 0; c < overFlow; c++){asm("nop");}
   642  01FD18  0E00               	movlw	0
   643  01FD1A  6E3D               	movwf	main@c+1,c
   644  01FD1C  0E00               	movlw	0
   645  01FD1E  6E3C               	movwf	main@c,c
   646  01FD20  D003               	goto	l833
   647  01FD22                     l11:
   648  01FD22  F000               	nop		;# 
   649  01FD24  4A3C               	infsnz	main@c,f,c
   650  01FD26  2A3D               	incf	main@c+1,f,c
   651  01FD28                     l833:
   652  01FD28  503A               	movf	main@overFlow,w,c
   653  01FD2A  5C3C               	subwf	main@c,w,c
   654  01FD2C  503B               	movf	main@overFlow+1,w,c
   655  01FD2E  583D               	subwfb	main@c+1,w,c
   656  01FD30  B0D8               	btfsc	status,0,c
   657  01FD32  D7EC               	goto	l827
   658  01FD34  D7F6               	goto	l11
   659  01FD36                     __end_of_main:
   660                           	opt stack 0
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           status	equ	0xFD8
   669                           
   670 ;; *************** function _toggle *****************
   671 ;; Defined at:
   672 ;;		line 87 in file "WBOS.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  pin             2    0[COMRAM] PTR struct pinDef
   675 ;;		 -> main@ledPin(7), 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  toAssign        1    5[COMRAM] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   691 ;;Total ram usage:        6 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  01FD36                     __ptext1:
   702                           	opt stack 0
   703  01FD36                     _toggle:
   704                           	opt stack 30
   705                           
   706                           ;WBOS.c: 88: unsigned char toAssign = pin->regID[0] ^ pin->regMask;
   707                           
   708                           ;incstack = 0
   709  01FD36  EE20 F002          	lfsr	2,2
   710  01FD3A  502A               	movf	toggle@pin,w,c
   711  01FD3C  26D9               	addwf	fsr2l,f,c
   712  01FD3E  502B               	movf	toggle@pin+1,w,c
   713  01FD40  22DA               	addwfc	fsr2h,f,c
   714  01FD42  50DF               	movf	indf2,w,c
   715  01FD44  6E2C               	movwf	??_toggle& (0+255),c
   716  01FD46  C02A  FFD9         	movff	toggle@pin,fsr2l
   717  01FD4A  C02B  FFDA         	movff	toggle@pin+1,fsr2h
   718  01FD4E  CFDE F02D          	movff	postinc2,??_toggle+1
   719  01FD52  CFDD F02E          	movff	postdec2,??_toggle+2
   720  01FD56  C02D  FFD9         	movff	??_toggle+1,fsr2l
   721  01FD5A  C02E  FFDA         	movff	??_toggle+2,fsr2h
   722  01FD5E  50DF               	movf	indf2,w,c
   723  01FD60  182C               	xorwf	??_toggle,w,c
   724  01FD62  6E2F               	movwf	toggle@toAssign,c
   725                           
   726                           ;WBOS.c: 89: pin->regID[0] = toAssign;
   727  01FD64  C02A  FFD9         	movff	toggle@pin,fsr2l
   728  01FD68  C02B  FFDA         	movff	toggle@pin+1,fsr2h
   729  01FD6C  CFDE F02C          	movff	postinc2,??_toggle
   730  01FD70  CFDD F02D          	movff	postdec2,??_toggle+1
   731  01FD74  C02C  FFD9         	movff	??_toggle,fsr2l
   732  01FD78  C02D  FFDA         	movff	??_toggle+1,fsr2h
   733  01FD7C  C02F  FFDF         	movff	toggle@toAssign,indf2
   734  01FD80  0012               	return		;funcret
   735  01FD82                     __end_of_toggle:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           indf2	equ	0xFDF
   745                           postinc2	equ	0xFDE
   746                           postdec2	equ	0xFDD
   747                           fsr2h	equ	0xFDA
   748                           fsr2l	equ	0xFD9
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _startPin *****************
   752 ;; Defined at:
   753 ;;		line 45 in file "WBOS.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  newPin          2    5[COMRAM] PTR struct pinDef
   756 ;;		 -> main@ledPin(7), 
   757 ;;  pinNum          1    7[COMRAM] unsigned char 
   758 ;;  pinDir          2    8[COMRAM] int 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  shiftLevel      2   13[COMRAM] int 
   761 ;;  rm              1   15[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   771 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   774 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   775 ;;Total ram usage:       11 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		_driveLow
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text2
   786  01FEDE                     __ptext2:
   787                           	opt stack 0
   788  01FEDE                     _startPin:
   789                           	opt stack 29
   790                           
   791                           ;WBOS.c: 47: int shiftLevel = regNumber[pinNum];
   792                           
   793                           ;incstack = 0
   794  01FEDE  5031               	movf	startPin@pinNum,w,c
   795  01FEE0  0D01               	mullw	1
   796  01FEE2  0E01               	movlw	low _regNumber
   797  01FEE4  24F3               	addwf	prodl,w,c
   798  01FEE6  6ED9               	movwf	fsr2l,c
   799  01FEE8  0E00               	movlw	high _regNumber
   800  01FEEA  20F4               	addwfc	prodh,w,c
   801  01FEEC  6EDA               	movwf	fsr2h,c
   802  01FEEE  50DF               	movf	indf2,w,c
   803  01FEF0  6E34               	movwf	??_startPin& (0+255),c
   804  01FEF2  5034               	movf	??_startPin,w,c
   805  01FEF4  6E37               	movwf	startPin@shiftLevel,c
   806  01FEF6  6A38               	clrf	startPin@shiftLevel+1,c
   807                           
   808                           ;WBOS.c: 48: unsigned char rm = 0x1 << shiftLevel;
   809  01FEF8  C037  F034         	movff	startPin@shiftLevel,??_startPin
   810  01FEFC  0E01               	movlw	1
   811  01FEFE  6E35               	movwf	(??_startPin+1)& (0+255),c
   812  01FF00  2A34               	incf	??_startPin,f,c
   813  01FF02  D002               	goto	u94
   814  01FF04                     u95:
   815  01FF04  90D8               	bcf	status,0,c
   816  01FF06  3635               	rlcf	??_startPin+1,f,c
   817  01FF08                     u94:
   818  01FF08  2E34               	decfsz	??_startPin,f,c
   819  01FF0A  D7FC               	goto	u95
   820  01FF0C  5035               	movf	??_startPin+1,w,c
   821  01FF0E  6E39               	movwf	startPin@rm,c
   822                           
   823                           ;WBOS.c: 49: newPin->regMask = rm;
   824  01FF10  EE20 F002          	lfsr	2,2
   825  01FF14  502F               	movf	startPin@newPin,w,c
   826  01FF16  26D9               	addwf	fsr2l,f,c
   827  01FF18  5030               	movf	startPin@newPin+1,w,c
   828  01FF1A  22DA               	addwfc	fsr2h,f,c
   829  01FF1C  C039  FFDF         	movff	startPin@rm,indf2
   830                           
   831                           ;WBOS.c: 52: if(pinDir){
   832  01FF20  5032               	movf	startPin@pinDir,w,c
   833  01FF22  1033               	iorwf	startPin@pinDir+1,w,c
   834  01FF24  B4D8               	btfsc	status,2,c
   835  01FF26  D01B               	goto	l803
   836                           
   837                           ;WBOS.c: 55: trisID[pinNum][0] |= newPin->regMask;
   838  01FF28  EE20 F002          	lfsr	2,2
   839  01FF2C  502F               	movf	startPin@newPin,w,c
   840  01FF2E  26D9               	addwf	fsr2l,f,c
   841  01FF30  5030               	movf	startPin@newPin+1,w,c
   842  01FF32  22DA               	addwfc	fsr2h,f,c
   843  01FF34  50DF               	movf	indf2,w,c
   844  01FF36  6E34               	movwf	??_startPin& (0+255),c
   845  01FF38  5031               	movf	startPin@pinNum,w,c
   846  01FF3A  0D02               	mullw	2
   847  01FF3C  0E60               	movlw	low _trisID
   848  01FF3E  24F3               	addwf	prodl,w,c
   849  01FF40  6ED9               	movwf	fsr2l,c
   850  01FF42  0E00               	movlw	high _trisID
   851  01FF44  20F4               	addwfc	prodh,w,c
   852  01FF46  6EDA               	movwf	fsr2h,c
   853  01FF48  CFDE F035          	movff	postinc2,??_startPin+1
   854  01FF4C  CFDD F036          	movff	postdec2,??_startPin+2
   855  01FF50  C035  FFD9         	movff	??_startPin+1,fsr2l
   856  01FF54  C036  FFDA         	movff	??_startPin+2,fsr2h
   857  01FF58  5034               	movf	??_startPin,w,c
   858  01FF5A  12DF               	iorwf	indf2,f,c
   859                           
   860                           ;WBOS.c: 56: }else{
   861  01FF5C  D01B               	goto	l805
   862  01FF5E                     l803:
   863                           
   864                           ;WBOS.c: 59: trisID[pinNum][0] &= ~(newPin->regMask);
   865  01FF5E  EE20 F002          	lfsr	2,2
   866  01FF62  502F               	movf	startPin@newPin,w,c
   867  01FF64  26D9               	addwf	fsr2l,f,c
   868  01FF66  5030               	movf	startPin@newPin+1,w,c
   869  01FF68  22DA               	addwfc	fsr2h,f,c
   870  01FF6A  50DF               	movf	indf2,w,c
   871  01FF6C  0AFF               	xorlw	255
   872  01FF6E  6E34               	movwf	??_startPin& (0+255),c
   873  01FF70  5031               	movf	startPin@pinNum,w,c
   874  01FF72  0D02               	mullw	2
   875  01FF74  0E60               	movlw	low _trisID
   876  01FF76  24F3               	addwf	prodl,w,c
   877  01FF78  6ED9               	movwf	fsr2l,c
   878  01FF7A  0E00               	movlw	high _trisID
   879  01FF7C  20F4               	addwfc	prodh,w,c
   880  01FF7E  6EDA               	movwf	fsr2h,c
   881  01FF80  CFDE F035          	movff	postinc2,??_startPin+1
   882  01FF84  CFDD F036          	movff	postdec2,??_startPin+2
   883  01FF88  C035  FFD9         	movff	??_startPin+1,fsr2l
   884  01FF8C  C036  FFDA         	movff	??_startPin+2,fsr2h
   885  01FF90  5034               	movf	??_startPin,w,c
   886  01FF92  16DF               	andwf	indf2,f,c
   887  01FF94                     l805:
   888                           
   889                           ;WBOS.c: 60: }
   890                           ;WBOS.c: 63: if(pinDir){
   891  01FF94  5032               	movf	startPin@pinDir,w,c
   892  01FF96  1033               	iorwf	startPin@pinDir+1,w,c
   893  01FF98  B4D8               	btfsc	status,2,c
   894  01FF9A  D007               	goto	l809
   895                           
   896                           ;WBOS.c: 65: newPin->regID = latID[pinNum];
   897  01FF9C  5031               	movf	startPin@pinNum,w,c
   898  01FF9E  0D02               	mullw	2
   899  01FFA0  0E00               	movlw	low _latID
   900  01FFA2  24F3               	addwf	prodl,w,c
   901  01FFA4  6ED9               	movwf	fsr2l,c
   902  01FFA6  0E01               	movlw	high _latID
   903  01FFA8  D006               	goto	L1
   904  01FFAA                     l809:
   905                           
   906                           ;WBOS.c: 67: newPin->regID = portID[pinNum];
   907  01FFAA  5031               	movf	startPin@pinNum,w,c
   908  01FFAC  0D02               	mullw	2
   909  01FFAE  0E52               	movlw	low _portID
   910  01FFB0  24F3               	addwf	prodl,w,c
   911  01FFB2  6ED9               	movwf	fsr2l,c
   912  01FFB4  0E01               	movlw	high _portID
   913  01FFB6                     L1:
   914  01FFB6  20F4               	addwfc	prodh,w,c
   915  01FFB8  6EDA               	movwf	fsr2h,c
   916  01FFBA  C02F  FFE1         	movff	startPin@newPin,fsr1l
   917  01FFBE  C030  FFE2         	movff	startPin@newPin+1,fsr1h
   918  01FFC2  CFDE FFE6          	movff	postinc2,postinc1
   919  01FFC6  CFDD FFE5          	movff	postdec2,postdec1
   920                           
   921                           ;WBOS.c: 68: }
   922                           ;WBOS.c: 70: newPin->directionState = pinDir;
   923  01FFCA  EE20 F005          	lfsr	2,5
   924  01FFCE  502F               	movf	startPin@newPin,w,c
   925  01FFD0  26D9               	addwf	fsr2l,f,c
   926  01FFD2  5030               	movf	startPin@newPin+1,w,c
   927  01FFD4  22DA               	addwfc	fsr2h,f,c
   928  01FFD6  C032  FFDE         	movff	startPin@pinDir,postinc2
   929  01FFDA  C033  FFDD         	movff	startPin@pinDir+1,postdec2
   930                           
   931                           ;WBOS.c: 71: newPin->pinState = 0;
   932  01FFDE  EE20 F003          	lfsr	2,3
   933  01FFE2  502F               	movf	startPin@newPin,w,c
   934  01FFE4  26D9               	addwf	fsr2l,f,c
   935  01FFE6  5030               	movf	startPin@newPin+1,w,c
   936  01FFE8  22DA               	addwfc	fsr2h,f,c
   937  01FFEA  0E00               	movlw	0
   938  01FFEC  6EDE               	movwf	postinc2,c
   939  01FFEE  0E00               	movlw	0
   940  01FFF0  6EDD               	movwf	postdec2,c
   941                           
   942                           ;WBOS.c: 73: driveLow(newPin);
   943  01FFF2  C02F  F02A         	movff	startPin@newPin,driveLow@pin
   944  01FFF6  C030  F02B         	movff	startPin@newPin+1,driveLow@pin+1
   945  01FFFA  EC60  F0FE         	call	_driveLow	;wreg free
   946  01FFFE  0012               	return	
   947  020000                     __end_of_startPin:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           prodh	equ	0xFF4
   954                           prodl	equ	0xFF3
   955                           postinc0	equ	0xFEE
   956                           postinc1	equ	0xFE6
   957                           postdec1	equ	0xFE5
   958                           fsr1h	equ	0xFE2
   959                           fsr1l	equ	0xFE1
   960                           indf2	equ	0xFDF
   961                           postinc2	equ	0xFDE
   962                           postdec2	equ	0xFDD
   963                           fsr2h	equ	0xFDA
   964                           fsr2l	equ	0xFD9
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _driveLow *****************
   968 ;; Defined at:
   969 ;;		line 82 in file "WBOS.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  pin             2    0[COMRAM] PTR struct pinDef
   972 ;;		 -> main@ledPin(7), 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  toMask          1    4[COMRAM] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   988 ;;Total ram usage:        5 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_startPin
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text3
   998  01FCC0                     __ptext3:
   999                           	opt stack 0
  1000  01FCC0                     _driveLow:
  1001                           	opt stack 29
  1002                           
  1003                           ;WBOS.c: 83: unsigned char toMask = ~(pin->regMask);
  1004                           
  1005                           ;incstack = 0
  1006  01FCC0  EE20 F002          	lfsr	2,2
  1007  01FCC4  502A               	movf	driveLow@pin,w,c
  1008  01FCC6  26D9               	addwf	fsr2l,f,c
  1009  01FCC8  502B               	movf	driveLow@pin+1,w,c
  1010  01FCCA  22DA               	addwfc	fsr2h,f,c
  1011  01FCCC  50DF               	movf	indf2,w,c
  1012  01FCCE  0AFF               	xorlw	255
  1013  01FCD0  6E2E               	movwf	driveLow@toMask,c
  1014                           
  1015                           ;WBOS.c: 84: pin->regID[0] &= toMask;
  1016  01FCD2  C02A  FFD9         	movff	driveLow@pin,fsr2l
  1017  01FCD6  C02B  FFDA         	movff	driveLow@pin+1,fsr2h
  1018  01FCDA  CFDE F02C          	movff	postinc2,??_driveLow
  1019  01FCDE  CFDD F02D          	movff	postdec2,??_driveLow+1
  1020  01FCE2  C02C  FFD9         	movff	??_driveLow,fsr2l
  1021  01FCE6  C02D  FFDA         	movff	??_driveLow+1,fsr2h
  1022  01FCEA  502E               	movf	driveLow@toMask,w,c
  1023  01FCEC  16DF               	andwf	indf2,f,c
  1024  01FCEE  0012               	return		;funcret
  1025  01FCF0                     __end_of_driveLow:
  1026                           	opt stack 0
  1027  0000                     tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           postinc0	equ	0xFEE
  1034                           postinc1	equ	0xFE6
  1035                           postdec1	equ	0xFE5
  1036                           fsr1h	equ	0xFE2
  1037                           fsr1l	equ	0xFE1
  1038                           indf2	equ	0xFDF
  1039                           postinc2	equ	0xFDE
  1040                           postdec2	equ	0xFDD
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           status	equ	0xFD8
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           prodh	equ	0xFF4
  1049                           prodl	equ	0xFF3
  1050                           postinc0	equ	0xFEE
  1051                           postinc1	equ	0xFE6
  1052                           postdec1	equ	0xFE5
  1053                           fsr1h	equ	0xFE2
  1054                           fsr1l	equ	0xFE1
  1055                           indf2	equ	0xFDF
  1056                           postinc2	equ	0xFDE
  1057                           postdec2	equ	0xFDD
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           status	equ	0xFD8
  1061                           
  1062                           	psect	rparam
  1063  0000                     tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           postinc0	equ	0xFEE
  1070                           postinc1	equ	0xFE6
  1071                           postdec1	equ	0xFE5
  1072                           fsr1h	equ	0xFE2
  1073                           fsr1l	equ	0xFE1
  1074                           indf2	equ	0xFDF
  1075                           postinc2	equ	0xFDE
  1076                           postdec2	equ	0xFDD
  1077                           fsr2h	equ	0xFDA
  1078                           fsr2l	equ	0xFD9
  1079                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        287
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      68
    BANK0           160      0      82
    BANK1           256      0     164
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    readPin@pin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    toggle@pin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    toggle@pin	PTR struct pinDef size(2) Largest target is 8
		 -> main@ledPin(COMRAM[7]), 

    driveLow@pin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    driveLow@pin	PTR struct pinDef size(2) Largest target is 8
		 -> main@ledPin(COMRAM[7]), 

    driveHigh@pin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    startPin@newPin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    startPin@newPin	PTR struct pinDef size(2) Largest target is 8
		 -> main@ledPin(COMRAM[7]), 

    latID	PTR unsigned char [41] size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), NULL(NULL[0]), 

    portID	PTR unsigned char [41] size(2) Largest target is 1
		 -> PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), PORTA(SFR_2[1]), 
		 -> PORTE(SFR_2[1]), NULL(NULL[0]), 

    trisID	PTR unsigned char [41] size(2) Largest target is 1
		 -> TRISB(SFR_2[1]), TRISD(SFR_2[1]), TRISC(SFR_2[1]), TRISA(SFR_2[1]), 
		 -> TRISE(SFR_2[1]), NULL(NULL[0]), 

    clear@object.dPort	PTR unsigned char  size(2) Largest target is 0

    clear@object.clkPort	PTR unsigned char  size(2) Largest target is 0

    resend@object.dPort	PTR unsigned char  size(2) Largest target is 0

    resend@object.clkPort	PTR unsigned char  size(2) Largest target is 0

    loadNew@object.dPort	PTR unsigned char  size(2) Largest target is 0

    loadNew@object.clkPort	PTR unsigned char  size(2) Largest target is 0

    S50SN74HC164$dPort	PTR unsigned char  size(2) Largest target is 0

    init@object.dPort	PTR unsigned char  size(2) Largest target is 0

    S50SN74HC164$clkPort	PTR unsigned char  size(2) Largest target is 0

    init@object.clkPort	PTR unsigned char  size(2) Largest target is 0

    S21pinDef$regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 

    ledPin.regID	PTR unsigned char  size(2) Largest target is 1
		 -> LATB(SFR_2[1]), LATD(SFR_2[1]), LATC(SFR_2[1]), LATA(SFR_2[1]), 
		 -> LATE(SFR_2[1]), PORTB(SFR_2[1]), PORTD(SFR_2[1]), PORTC(SFR_2[1]), 
		 -> PORTA(SFR_2[1]), PORTE(SFR_2[1]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_startPin
    _startPin->_driveLow

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1042
                                             16 COMRAM    11    11      0
                           _startPin
                             _toggle
 ---------------------------------------------------------------------------------
 (1) _toggle                                               6     4      2     165
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _startPin                                            11     6      5     769
                                              5 COMRAM    11     6      5
                           _driveLow
 ---------------------------------------------------------------------------------
 (2) _driveLow                                             5     3      2     143
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _startPin
     _driveLow
   _toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A4       8       64.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      52       5       51.3%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      44       1       71.6%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A       6        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 15 14:06:20 2017

                     l11 FD22                       u94 FF08                       u95 FF04  
                    l803 FF5E                      l805 FF94                      l809 FFAA  
                    l833 FD28                      l827 FD0C                      prod 000FF3  
                   _LATA 000F83                     _LATB 000F84                     _LATC 000F85  
                   _LATD 000F86                     _LATE 000F87                     _main FCF0  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 002A  
          __CFG_WDTE$OFF 000000                    _PORTA 000F8D                    _PORTB 000F8E  
                  _PORTC 000F8F                    _PORTD 000F90                    _PORTE 000F91  
                  _TRISA 000F88                    _TRISB 000F89                    _TRISC 000F8A  
                  _TRISD 000F8B                    _TRISE 000F8C                    _latID 0100  
                  main@c 003C              driveLow@pin 002A             main@overFlow 003A  
                  tablat 000FF5                    status 000FD8          __initialization FDD4  
           __end_of_main FD36                   ??_main 003A            __activetblptr 000000  
       __end_of_driveLow FCF0                   _portID 0152                   _toggle FD36  
                 _trisID 0060             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_startPin 0000  
             __accesstop 0060  __end_of__initialization FE34            ___rparam_used 000001  
         __pcstackCOMRAM 002A             __pidataBANK0 FD82             __pidataBANK1 FE3A  
         toggle@toAssign 002F                  ?_toggle 002A                ?_driveLow 002A  
                __Hparam 0000                  __Lparam 0000                ?_startPin 002F  
                __pcinit FDD4                  __ramtop 0F00                  __ptext0 FCF0  
                __ptext1 FD36                  __ptext2 FEDE                  __ptext3 FCC0  
        __size_of_toggle 004C     end_of_initialization FE34               ??_driveLow 002C  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_startPin 0034  
             main@ledPin 003E       startPin@shiftLevel 0037            __pidataCOMRAM FC97  
         __end_of_toggle FD82      start_initialization FDD4              __pdataBANK0 0060  
            __pdataBANK1 0100                 ??_toggle 002C        __size_of_driveLow 0030  
      __size_of_startPin 0122                _regNumber 0001                copy_data0 FDE8  
              copy_data1 FE08                copy_data2 FE28           startPin@newPin 002F  
         startPin@pinDir 0032           startPin@pinNum 0031                 __Hrparam 0000  
             startPin@rm 0039                 __Lrparam 0000                 _driveLow FCC0  
          __size_of_main 0046                 _startPin FEDE           driveLow@toMask 002E  
              toggle@pin 002A  
